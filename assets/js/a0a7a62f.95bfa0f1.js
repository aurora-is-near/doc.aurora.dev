"use strict";(self.webpackChunkaurora_docs=self.webpackChunkaurora_docs||[]).push([[785],{257:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>i,contentTitle:()=>o,default:()=>h,frontMatter:()=>s,metadata:()=>a,toc:()=>c});const a=JSON.parse('{"id":"dev-reference/eth-wallets","title":"How to integrate Ethereum Wallets to Near DApps?","description":"In this article we will describe how to add EVM wallets support to your Near app, which is already uses the Near Wallet Selector.","source":"@site/docs/dev-reference/eth-wallets.md","sourceDirName":"dev-reference","slug":"/dev-reference/eth-wallets","permalink":"/dev-reference/eth-wallets","draft":false,"unlisted":false,"editUrl":"https://github.com/aurora-is-near/doc.aurora.dev/edit/master/docs/dev-reference/eth-wallets.md","tags":[],"version":"current","frontMatter":{"sidebar_label":"Ethereum Wallets on Near"}}');var r=t(3274),l=t(7507);const s={sidebar_label:"Ethereum Wallets on Near"},o="How to integrate Ethereum Wallets to Near DApps?",i={},c=[{value:"Update Wallet Selector libraries",id:"update-wallet-selector-libraries",level:2},{value:"Add Web3Modal libraries",id:"add-web3modal-libraries",level:2},{value:"Add Near chain config with our RPCs",id:"add-near-chain-config-with-our-rpcs",level:2},{value:"Add Web3Modal",id:"add-web3modal",level:2},{value:"Chain configuration",id:"chain-configuration",level:3},{value:"Get <code>projectId</code>",id:"get-projectid",level:3},{value:"Prepare metadata",id:"prepare-metadata",level:3},{value:"Create <code>wagmiConfig</code>",id:"create-wagmiconfig",level:3},{value:"Create Web3Modal",id:"create-web3modal",level:3},{value:"Call <code>setupEthereumWallets</code>",id:"call-setupethereumwallets",level:2},{value:"Resources",id:"resources",level:2}];function d(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",...(0,l.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"how-to-integrate-ethereum-wallets-to-near-dapps",children:"How to integrate Ethereum Wallets to Near DApps?"})}),"\n",(0,r.jsxs)(n.p,{children:["In this article we will describe how to add EVM wallets support to your Near app, which is already uses the ",(0,r.jsx)(n.a,{href:"https://github.com/near/wallet-selector/",children:"Near Wallet Selector"}),"."]}),"\n",(0,r.jsx)(n.admonition,{type:"info",children:(0,r.jsxs)(n.p,{children:["AuroraLabs team has worked on this feature almost for a year now. You can learn more about it from ",(0,r.jsx)(n.a,{href:"https://github.com/near/NEPs/issues/518",children:"NEP-518"}),"."]})}),"\n",(0,r.jsx)(n.p,{children:"To integrate the Metatamask and other EVM wallets you will need:"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsx)(n.li,{children:"Update Wallet Selector libraries"}),"\n",(0,r.jsx)(n.li,{children:"Add Web3Modal libraries (wagmi, web3wallet, eth-wallets-selector)"}),"\n",(0,r.jsx)(n.li,{children:"Add Near chain config with our RPCs."}),"\n",(0,r.jsx)(n.li,{children:"Add Web3Modal."}),"\n",(0,r.jsxs)(n.li,{children:["Call ",(0,r.jsx)(n.code,{children:"setupEthereumWallets"}),"."]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["We will add Ethereum Wallets support to the ",(0,r.jsx)(n.a,{href:"https://github.com/near-examples/hello-near-examples/tree/main/frontend",children:"Hello Near Examples"}),"."]}),"\n",(0,r.jsx)(n.p,{children:"Let's go step-by-step with it!"}),"\n",(0,r.jsx)(n.h2,{id:"update-wallet-selector-libraries",children:"Update Wallet Selector libraries"}),"\n",(0,r.jsxs)(n.p,{children:["Go to your ",(0,r.jsx)(n.code,{children:"package.json"})," and change versions of the ",(0,r.jsx)(n.code,{children:"@near-wallet-selector/core"})," package and all of the wallets packages to be ",(0,r.jsx)(n.code,{children:"^8.9.13"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",metastring:'title="package.json"',children:'  "dependencies": {\n    ...\n    "@near-wallet-selector/core": "^8.9.13",\n    "@near-wallet-selector/here-wallet": "^8.9.13",\n    "@near-wallet-selector/modal-ui": "^8.9.13",\n    "@near-wallet-selector/my-near-wallet": "^8.9.13",\n    // highlight-next-line\n    // add the Ethereum Wallets package here\n    // highlight-next-line\n    "@near-wallet-selector/ethereum-wallets": "^8.9.13",\n    ...\n    }\n'})}),"\n",(0,r.jsx)(n.p,{children:"Add the Ethereum wallets package:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",metastring:'title="package.json"',children:'  "dependencies": {\n    ...\n    "@near-wallet-selector/core": "^8.9.13",\n    ...\n    // highlight-next-line\n    // add the Ethereum Wallets package here\n    // highlight-next-line\n    "@near-wallet-selector/ethereum-wallets": "^8.9.13",\n    ...\n    }\n'})}),"\n",(0,r.jsx)(n.p,{children:"Install the packages:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# Using Yarn\nyarn install\n\n# Using NPM\nnpm install\n\n"})}),"\n",(0,r.jsx)(n.h2,{id:"add-web3modal-libraries",children:"Add Web3Modal libraries"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.a,{href:"https://reown.com/appkit",children:"Web3Modal (also known as AppKit)"})," is a standard way to integrate multiple wallets in Ethereum community."]}),"\n",(0,r.jsxs)(n.p,{children:["It is based on [wagmi] hooks library for React. We will describe the React integration here, but if you are on another platform - just go ",(0,r.jsx)(n.a,{href:"https://docs.reown.com/appkit/overview#get-started",children:"here"}),",\nand try using specific instructions suitable for you to install it."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# Using Yarn\nyarn add @web3modal/wagmi wagmi viem @tanstack/react-query\n\n# Using NPM.\nnpm install @web3modal/wagmi wagmi viem @tanstack/react-query\n"})}),"\n",(0,r.jsx)(n.h2,{id:"add-near-chain-config-with-our-rpcs",children:"Add Near chain config with our RPCs"}),"\n",(0,r.jsxs)(n.p,{children:["To your config files you will need to add RPCs data. One for the ",(0,r.jsx)(n.code,{children:"mainnet"}),", and another for the ",(0,r.jsx)(n.code,{children:"testnet"}),"."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",metastring:'title="source/config.js"',children:'const evmWalletChains = {\n  testnet: {\n    nearEnv: "testnet",\n    chainId: 398,\n    walletExplorerUrl: "https://eth-explorer-testnet.near.org",\n    explorerUrl: "https://testnet.nearblocks.io",\n    ethRpcForNear: "https://eth-rpc.testnet.near.org",\n    nearNativeRpc: "https://rpc.testnet.near.org"\n  },\n  mainnet: {\n    chainId: 397,\n    nearEnv: "mainnet",\n    walletExplorerUrl: "https://eth-explorer.near.org",\n    explorerUrl: "https://nearblocks.io",\n    ethRpcForNear: "https://eth-rpc.mainnet.near.org",\n    nearNativeRpc: "https://rpc.mainnet.near.org"\n  }\n}\n\nexport const NetworkId = \'testnet\';\nexport const EVMWalletChain = evmWalletChains[NetworkId];\n'})}),"\n",(0,r.jsx)(n.h2,{id:"add-web3modal",children:"Add Web3Modal"}),"\n",(0,r.jsx)(n.h3,{id:"chain-configuration",children:"Chain configuration"}),"\n",(0,r.jsxs)(n.p,{children:["First, let's create a new file to store our Web3Modal there, import some libs and add ",(0,r.jsx)(n.code,{children:"nearChain"})," config there formatted in ",(0,r.jsx)(n.code,{children:"wagmi"})," style:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",metastring:'title="source/wallets/web3modal.js"',children:'import { NetworkId, EVMWalletChain } from \'@/config\';\nimport { reconnect, http, createConfig } from "@wagmi/core";\nimport { walletConnect, injected } from "@wagmi/connectors";\n\nconst onMainnet = NetworkId == "mainnet";\nconst nearChain = {\n  id: EVMWalletChain.chainId,\n  name: `NEAR Protocol${ onMainnet ? "" : " Testnet"}`,\n  nativeCurrency: {\n    decimals: 18,\n    name: "NEAR",\n    symbol: "NEAR",\n  },\n  rpcUrls: {\n    default: { http: [EVMWalletChain.ethRpcForNear] },\n    public: { http: [EVMWalletChain.ethRpcForNear] },\n  },\n  blockExplorers: {\n    default: {\n      name: "NEAR Explorer",\n      url: EVMWalletChain.walletExplorerUrl,\n    },\n  },\n  testnet: !onMainnet,\n};\n'})}),"\n",(0,r.jsxs)(n.h3,{id:"get-projectid",children:["Get ",(0,r.jsx)(n.code,{children:"projectId"})]}),"\n",(0,r.jsxs)(n.p,{children:["Let's get the Web3Modal ",(0,r.jsx)(n.code,{children:"projectId"})," for your project.\nTo do that you will need to:"]}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["Go to ",(0,r.jsx)(n.a,{href:"https://cloud.reown.com/",children:"Cloud Reown"}),"."]}),"\n",(0,r.jsx)(n.li,{children:"Register there."}),"\n",(0,r.jsx)(n.li,{children:"Create a project on Cloud Reown."}),"\n",(0,r.jsxs)(n.li,{children:["You can copy your ",(0,r.jsx)(n.code,{children:"projectId"}),":"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{alt:"reown_projectid",src:t(7775).A+"",width:"3024",height:"868"})}),"\n",(0,r.jsxs)(n.p,{children:["You can read more about the ",(0,r.jsx)(n.code,{children:"projectId"})," and how it works ",(0,r.jsx)(n.a,{href:"https://docs.reown.com/appkit/react/core/installation#cloud-configuration",children:"here"}),"."]}),"\n",(0,r.jsx)(n.h3,{id:"prepare-metadata",children:"Prepare metadata"}),"\n",(0,r.jsxs)(n.p,{children:["Make sure to pass the correct hosting URL here of your project as ",(0,r.jsx)(n.code,{children:"url"})," and create a ",(0,r.jsx)(n.code,{children:"metadata"})," object:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",metastring:'title="source/wallets/web3modal.js"',children:'...\n\n// get your host URL here\nconst url = "http://localhost:3000";\n\nconst metadata = {\n  name: "Onboard to NEAR Protocol with EVM Wallet",\n  description: "Discover NEAR Protocol with Ethereum and NEAR wallets.",\n  url: url,\n  icons: [`${url}/icon.svg`],\n};\n\n...\n'})}),"\n",(0,r.jsxs)(n.p,{children:["This tracks the app requesting the connection on the WalletConnect side. See more ",(0,r.jsx)(n.a,{href:"https://wagmi.sh/core/api/connectors/walletConnect#metadata",children:"here"}),".\nIt is crucial to display the correct information inside the EVM wallets, like MetaMask."]}),"\n",(0,r.jsxs)(n.h3,{id:"create-wagmiconfig",children:["Create ",(0,r.jsx)(n.code,{children:"wagmiConfig"})]}),"\n",(0,r.jsxs)(n.p,{children:["Now, we can use that ",(0,r.jsx)(n.code,{children:"projectId"})," and ",(0,r.jsx)(n.code,{children:"metadata"})," to instantiate the ",(0,r.jsx)(n.code,{children:"wagmiConfig"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",metastring:'title="source/wallets/web3modal.js"',children:"\n...\n\nconst reownProjectId = '5bb0fe33763b3bea40b8d69e4269b4ae';\n\nconst metadata = { ... };\n\nexport const wagmiConfig = createConfig({\n  chains: [nearChain],\n  transports: {\n    [nearChain.id]: http(),\n  },\n  connectors: [\n    walletConnect({ projectId: reownProjectId, metadata, showQrModal: false }),\n    injected({ shimDisconnect: true }),\n  ],\n});\n\n// Needed to be called to preserve the login state if your will reload the page\n// Make sure you are calling it there in your file\nreconnect(wagmiConfig);\n\n"})}),"\n",(0,r.jsx)(n.admonition,{type:"note",children:(0,r.jsxs)(n.p,{children:["Make sure you have ",(0,r.jsx)(n.code,{children:"reconnect(wagmiConfig);"})," in your code."]})}),"\n",(0,r.jsx)(n.h3,{id:"create-web3modal",children:"Create Web3Modal"}),"\n",(0,r.jsxs)(n.p,{children:["Let's create a Web3Modal now with a config we just prepared with ",(0,r.jsx)(n.code,{children:"createWeb3Modal"})," function:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",metastring:'title="source/wallets/web3modal.js"',children:'import { createWeb3Modal } from "@web3modal/wagmi";\n\n... \n\nexport const web3Modal = createWeb3Modal({\n  wagmiConfig: wagmiConfig,\n  // Get a project ID at https://cloud.walletconnect.com\n  projectId: reownProjectId,\n});\n'})}),"\n",(0,r.jsxs)(n.h2,{id:"call-setupethereumwallets",children:["Call ",(0,r.jsx)(n.code,{children:"setupEthereumWallets"})]}),"\n",(0,r.jsxs)(n.p,{children:["The last step is to add the Ethereum Wallets selector to your Near Wallet Selector. Let's find your ",(0,r.jsx)(n.code,{children:"setupWalletSelector"})," call and add ",(0,r.jsx)(n.code,{children:"setupEthereumWallets"})," there:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",metastring:'title="wallets/near.js"',children:"import { setupWalletSelector } from '@near-wallet-selector/core';\nimport { wagmiConfig, web3Modal } from '@/wallets/web3modal';\nimport { setupEthereumWallets } from \"@near-wallet-selector/ethereum-wallets\";\n...\n// to start using EVM wallet with Near the user needs to do a free onboarding transaction\n// `alwaysOnboardDuringSignIn` option ensures that it will happen right away after login\nconst alwaysOnboardDuringSignIn = true;\n    this.selector = setupWalletSelector({\n      network: this.networkId,\n      modules: [\n        setupMyNearWallet(),\n        setupHereWallet(),\n        // pass your wagmiConfig and web3Modal here as arguments\n        setupEthereumWallets({ wagmiConfig, web3Modal, alwaysOnboardDuringSignIn }),\n      ]\n    });\n\n"})}),"\n",(0,r.jsx)(n.p,{children:"And that is it! Just re-build your project and try connecting MetaMask to it!"}),"\n",(0,r.jsx)(n.p,{children:"You should see Ethereum Wallets option in your Near Selector:"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{alt:"ethwallets_popup1",src:t(6488).A+"",width:"3008",height:"1658"})}),"\n",(0,r.jsx)(n.p,{children:"And after click to be able to choose the EVM wallet of your taste:"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{alt:"ethwallets_popup2",src:t(2099).A+"",width:"3004",height:"1582"})}),"\n",(0,r.jsx)(n.h2,{id:"resources",children:"Resources"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.a,{href:"https://github.com/near/wallet-selector/blob/9a9f9535ec57633b949872bb51903e7802beb3e8/packages/ethereum-wallets/README.md",children:"A fuller version of docs about integration"})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.a,{href:"https://github.com/Karkunow/hello-near-examples/tree/1ceede7",children:"Source code of the project above"})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.a,{href:"https://testnet.nearblocks.io/address/0xe5acd26a443d2d62f6b3379c0a5b2c7ac65d9454",children:"Example of the EVM account on the Near Testnet"})," to see what happens in reality on-chain during the execution."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["Details about how does it work are in ",(0,r.jsx)(n.a,{href:"https://github.com/near/NEPs/issues/518",children:"NEP-518"})]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.a,{href:"https://drive.google.com/file/d/1xGWN1yRLzFmRn1e29kbSiO2W1JsxuJH-/view?usp=sharing",children:"Recording of the Near Devs call"})," with the EthWallets presentation."]}),"\n"]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},6488:(e,n,t)=>{t.d(n,{A:()=>a});const a=t.p+"assets/images/ethwallets_popup1-b113d70e3578a75f0f996aa3bcdf43e9.png"},2099:(e,n,t)=>{t.d(n,{A:()=>a});const a=t.p+"assets/images/ethwallets_popup2-8484d037a465af5134f112fba6eef918.png"},7775:(e,n,t)=>{t.d(n,{A:()=>a});const a=t.p+"assets/images/reown_projectid-dbd1cc5521998d2f16545598ac925a5e.png"},7507:(e,n,t)=>{t.d(n,{R:()=>s,x:()=>o});var a=t(9474);const r={},l=a.createContext(r);function s(e){const n=a.useContext(l);return a.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:s(e.components),a.createElement(l.Provider,{value:n},e.children)}}}]);