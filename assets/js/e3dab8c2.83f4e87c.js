"use strict";(self.webpackChunkaurora_docs=self.webpackChunkaurora_docs||[]).push([[5099],{4974:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>i,contentTitle:()=>r,default:()=>u,frontMatter:()=>s,metadata:()=>a,toc:()=>d});const a=JSON.parse('{"id":"build-a-dapp/frontend/account","title":"Get account data","description":"We can re-use the project from the Connect Wallet article to demonstrate how to get the basic account information about your user.","source":"@site/docs/build-a-dapp/frontend/account.md","sourceDirName":"build-a-dapp/frontend","slug":"/build-a-dapp/frontend/account","permalink":"/build-a-dapp/frontend/account","draft":false,"unlisted":false,"editUrl":"https://github.com/aurora-is-near/doc.aurora.dev/edit/master/docs/build-a-dapp/frontend/account.md","tags":[],"version":"current","frontMatter":{"title":"Get account data"},"sidebar":"developers","previous":{"title":"Connect a wallet","permalink":"/build-a-dapp/frontend/connect-wallet"},"next":{"title":"Send transactions","permalink":"/build-a-dapp/frontend/transactions"}}');var o=n(3274),c=n(7507);const s={title:"Get account data"},r=void 0,i={},d=[{value:"Account data",id:"account-data",level:2},{value:"Balance of native token",id:"balance-of-native-token",level:2}];function l(e){const t={a:"a",admonition:"admonition",code:"code",h2:"h2",img:"img",p:"p",pre:"pre",...(0,c.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsxs)(t.p,{children:["We can re-use the project from the ",(0,o.jsx)(t.a,{href:"/build-a-dapp/frontend/connect-wallet",children:"Connect Wallet"})," article to demonstrate how to get the basic account information about your user."]}),"\n",(0,o.jsx)(t.p,{children:"We will get the chain information, address and the native coin balance. The final result will look like this:"}),"\n",(0,o.jsx)(t.p,{children:(0,o.jsx)(t.img,{alt:"dapp_account_info.png",src:n(9959).A+"",width:"1234",height:"358"})}),"\n",(0,o.jsx)(t.admonition,{type:"note",children:(0,o.jsx)(t.p,{children:"You can see the same React component shown on the Preview tab of the StackBlitz widget example below, after you connect your wallet to it."})}),"\n",(0,o.jsxs)(t.p,{children:["We will focus on the ",(0,o.jsx)(t.code,{children:"Account"})," component code in this article:"]}),"\n",(0,o.jsx)("iframe",{width:"700",height:"500",src:"https://stackblitz.com/edit/vitejs-vite-muf79v?embed=1&file=src%2FApp.tsx,src%2Fcomponents%2FAccount.tsx&view=editor",style:{display:"block",margin:"auto"},title:"Connect wallet",frameborder:"auto",allow:"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture;\nweb-share",allowfullscreen:!0}),"\n",(0,o.jsx)(t.h2,{id:"account-data",children:"Account data"}),"\n",(0,o.jsxs)(t.p,{children:["To get the account data all you need is Wagmi's ",(0,o.jsx)(t.a,{href:"https://wagmi.sh/react/api/hooks/useAccount",children:"useAccount"})," hook:"]}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-tsx",metastring:"[components/Account.tsx]",children:'import { useAccount } from \'wagmi\';\n\nexport function Account() {\n const { address, connector, chain } = useAccount();\n ...\n <div className="stack">\n   {address && <div className="text">{formattedAddress}</div>}\n   <div className="subtext">\n     Connector: {connector?.name}\n     <br></br>\n     {chain && <span> Chain: {chain.name} </span>}\n     <br></br>\n      ...\n     </div>\n </div>\n}\n'})}),"\n",(0,o.jsxs)(t.p,{children:["You can get the user address, the connector they are using and the chain they are connected to.\nThere are more fields go get from it, please read ",(0,o.jsx)(t.a,{href:"https://wagmi.sh/react/api/hooks/useAccount#return-type",children:"the UseAccountReturnType object documentation here"})," to learn more."]}),"\n",(0,o.jsx)(t.h2,{id:"balance-of-native-token",children:"Balance of native token"}),"\n",(0,o.jsxs)(t.p,{children:["To get a balance of ETH (or any other native token), you need to use ",(0,o.jsx)(t.a,{href:"https://wagmi.sh/react/api/hooks/useBalance",children:"useBalance"})," hook:"]}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-tsx",metastring:"[components/Account.tsx]",children:"import { useBalance } from 'wagmi';\n\nexport function Account() {\nconst balance = useBalance({ address: address });\n...\n//to display the value, you need to access the formatted field via .data.formatted\n  {balance && <span> Balance: {balance.data.formatted} ETH</span>}\n...\n}\n"})}),"\n",(0,o.jsxs)(t.p,{children:["As you can see, to display the value, you need to access the formatted field via ",(0,o.jsx)(t.code,{children:".data.formatted"}),". You can read more about ",(0,o.jsx)(t.a,{href:"https://wagmi.sh/react/api/hooks/useBalance#return-type",children:"the UseBalanceReturnType structure here"}),"."]}),"\n",(0,o.jsx)(t.admonition,{type:"note",children:(0,o.jsxs)(t.p,{children:["You can also just use ",(0,o.jsx)(t.code,{children:"console.log"})," for such objects to see their structure in your browser console right away."]})}),"\n",(0,o.jsx)(t.p,{children:"We will talk about how to get balances of ERC-20 tokens in the next article, because to do that you will need to read from the token contract directly."})]})}function u(e={}){const{wrapper:t}={...(0,c.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(l,{...e})}):l(e)}},9959:(e,t,n)=>{n.d(t,{A:()=>a});const a=n.p+"assets/images/dapp_account_info-c21b300c6234049f2baa0d4aa93309c7.png"},7507:(e,t,n)=>{n.d(t,{R:()=>s,x:()=>r});var a=n(9474);const o={},c=a.createContext(o);function s(e){const t=a.useContext(c);return a.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function r(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:s(e.components),a.createElement(c.Provider,{value:t},e.children)}}}]);