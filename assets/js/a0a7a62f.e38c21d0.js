"use strict";(self.webpackChunkaurora_docs=self.webpackChunkaurora_docs||[]).push([[6872],{9613:(e,t,a)=>{a.d(t,{Zo:()=>c,kt:()=>h});var n=a(9496);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function i(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},l=Object.keys(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var s=n.createContext({}),p=function(e){var t=n.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},c=function(e){var t=p(e.components);return n.createElement(s.Provider,{value:t},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,l=e.originalType,s=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),d=p(a),m=r,h=d["".concat(s,".").concat(m)]||d[m]||u[m]||l;return a?n.createElement(h,o(o({ref:t},c),{},{components:a})):n.createElement(h,o({ref:t},c))}));function h(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=a.length,o=new Array(l);o[0]=m;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i[d]="string"==typeof e?e:r,o[1]=i;for(var p=2;p<l;p++)o[p]=a[p];return n.createElement.apply(null,o)}return n.createElement.apply(null,a)}m.displayName="MDXCreateElement"},2865:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>u,frontMatter:()=>l,metadata:()=>i,toc:()=>p});var n=a(1163),r=(a(9496),a(9613));const l={sidebar_label:"Ethereum Wallets on Near"},o="How to integrate Ethereum Wallets to Near DApps?",i={unversionedId:"dev-reference/eth-wallets",id:"dev-reference/eth-wallets",title:"How to integrate Ethereum Wallets to Near DApps?",description:"In this article we will describe how to add EVM wallets support to your Near app, which is already uses the Near Wallet Selector.",source:"@site/docs/dev-reference/eth-wallets.md",sourceDirName:"dev-reference",slug:"/dev-reference/eth-wallets",permalink:"/dev-reference/eth-wallets",draft:!1,editUrl:"https://github.com/aurora-is-near/doc.aurora.dev/edit/master/docs/dev-reference/eth-wallets.md",tags:[],version:"current",frontMatter:{sidebar_label:"Ethereum Wallets on Near"},sidebar:"tutorialSidebar",previous:{title:"Ecosystem Contracts",permalink:"/dev-reference/contracts"}},s={},p=[{value:"Update Wallet Selector libraries",id:"update-wallet-selector-libraries",level:2},{value:"Add Web3Modal libraries",id:"add-web3modal-libraries",level:2},{value:"Add Near chain config with our RPCs",id:"add-near-chain-config-with-our-rpcs",level:2},{value:"Add Web3Modal",id:"add-web3modal",level:2},{value:"Chain configuration",id:"chain-configuration",level:3},{value:"Get <code>projectId</code>",id:"get-projectid",level:3},{value:"Prepare metadata",id:"prepare-metadata",level:3},{value:"Create <code>wagmiConfig</code>",id:"create-wagmiconfig",level:3},{value:"Create Web3Modal",id:"create-web3modal",level:3},{value:"Call <code>setupEthereumWallets</code>",id:"call-setupethereumwallets",level:2},{value:"Resources",id:"resources",level:2}],c={toc:p},d="wrapper";function u(e){let{components:t,...l}=e;return(0,r.kt)(d,(0,n.Z)({},c,l,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"how-to-integrate-ethereum-wallets-to-near-dapps"},"How to integrate Ethereum Wallets to Near DApps?"),(0,r.kt)("p",null,"In this article we will describe how to add EVM wallets support to your Near app, which is already uses the ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/near/wallet-selector/"},"Near Wallet Selector"),"."),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("p",{parentName:"admonition"},"AuroraLabs team has worked on this feature almost for a year now. You can learn more about it from ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/near/NEPs/issues/518"},"NEP-518"),".")),(0,r.kt)("p",null,"To integrate the Metatamask and other EVM wallets you will need:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Update Wallet Selector libraries"),(0,r.kt)("li",{parentName:"ol"},"Add Web3Modal libraries (wagmi, web3wallet, eth-wallets-selector)"),(0,r.kt)("li",{parentName:"ol"},"Add Near chain config with our RPCs."),(0,r.kt)("li",{parentName:"ol"},"Add Web3Modal."),(0,r.kt)("li",{parentName:"ol"},"Call ",(0,r.kt)("inlineCode",{parentName:"li"},"setupEthereumWallets"),".")),(0,r.kt)("p",null,"We will add Ethereum Wallets support to the ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/near-examples/hello-near-examples/tree/main/frontend"},"Hello Near Examples"),"."),(0,r.kt)("p",null,"Let's go step-by-step with it!"),(0,r.kt)("h2",{id:"update-wallet-selector-libraries"},"Update Wallet Selector libraries"),(0,r.kt)("p",null,"Go to your ",(0,r.kt)("inlineCode",{parentName:"p"},"package.json")," and change versions of the ",(0,r.kt)("inlineCode",{parentName:"p"},"@near-wallet-selector/core")," package and all of the wallets packages to be ",(0,r.kt)("inlineCode",{parentName:"p"},"^8.9.13"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="package.json"',title:'"package.json"'},'  "dependencies": {\n    ...\n    "@near-wallet-selector/core": "^8.9.13",\n    "@near-wallet-selector/here-wallet": "^8.9.13",\n    "@near-wallet-selector/modal-ui": "^8.9.13",\n    "@near-wallet-selector/my-near-wallet": "^8.9.13",\n    // highlight-next-line\n    // add the Ethereum Wallets package here\n    // highlight-next-line\n    "@near-wallet-selector/ethereum-wallets": "^8.9.13",\n    ...\n    }\n')),(0,r.kt)("p",null,"Add the Ethereum wallets package:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="package.json"',title:'"package.json"'},'  "dependencies": {\n    ...\n    "@near-wallet-selector/core": "^8.9.13",\n    ...\n    // highlight-next-line\n    // add the Ethereum Wallets package here\n    // highlight-next-line\n    "@near-wallet-selector/ethereum-wallets": "^8.9.13",\n    ...\n    }\n')),(0,r.kt)("p",null,"Install the packages:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"# Using Yarn\nyarn install\n\n# Using NPM\nnpm install\n\n")),(0,r.kt)("h2",{id:"add-web3modal-libraries"},"Add Web3Modal libraries"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://reown.com/appkit"},"Web3Modal (also known as AppKit)")," is a standard way to integrate multiple wallets in Ethereum community."),(0,r.kt)("p",null,"It is based on ","[wagmi]"," hooks library for React. We will describe the React integration here, but if you are on another platform - just go ",(0,r.kt)("a",{parentName:"p",href:"https://docs.reown.com/appkit/overview#get-started"},"here"),",\nand try using specific instructions suitable for you to install it."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"# Using Yarn\nyarn add @web3modal/wagmi wagmi viem @tanstack/react-query\n\n# Using NPM.\nnpm install @web3modal/wagmi wagmi viem @tanstack/react-query\n")),(0,r.kt)("h2",{id:"add-near-chain-config-with-our-rpcs"},"Add Near chain config with our RPCs"),(0,r.kt)("p",null,"To your config files you will need to add RPCs data. One for the ",(0,r.kt)("inlineCode",{parentName:"p"},"mainnet"),", and another for the ",(0,r.kt)("inlineCode",{parentName:"p"},"testnet"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="source/config.js"',title:'"source/config.js"'},'const evmWalletChains = {\n  testnet: {\n    nearEnv: "testnet",\n    chainId: 398,\n    walletExplorerUrl: "https://eth-explorer-testnet.near.org",\n    explorerUrl: "https://testnet.nearblocks.io",\n    ethRpcForNear: "https://eth-rpc.testnet.near.org",\n    nearNativeRpc: "https://rpc.testnet.near.org"\n  },\n  mainnet: {\n    chainId: 397,\n    nearEnv: "mainnet",\n    walletExplorerUrl: "https://eth-explorer.near.org",\n    explorerUrl: "https://nearblocks.io",\n    ethRpcForNear: "https://eth-rpc.mainnet.near.org",\n    nearNativeRpc: "https://rpc.mainnet.near.org"\n  }\n}\n\nexport const NetworkId = \'testnet\';\nexport const EVMWalletChain = evmWalletChains[NetworkId];\n')),(0,r.kt)("h2",{id:"add-web3modal"},"Add Web3Modal"),(0,r.kt)("h3",{id:"chain-configuration"},"Chain configuration"),(0,r.kt)("p",null,"First, let's create a new file to store our Web3Modal there, import some libs and add ",(0,r.kt)("inlineCode",{parentName:"p"},"nearChain")," config there formatted in ",(0,r.kt)("inlineCode",{parentName:"p"},"wagmi")," style:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="source/wallets/web3modal.js"',title:'"source/wallets/web3modal.js"'},'import { NetworkId, EVMWalletChain } from \'@/config\';\nimport { reconnect, http, createConfig } from "@wagmi/core";\nimport { walletConnect, injected } from "@wagmi/connectors";\n\nconst onMainnet = NetworkId == "mainnet";\nconst nearChain = {\n  id: EVMWalletChain.chainId,\n  name: `NEAR Protocol${ onMainnet ? "" : " Testnet"}`,\n  nativeCurrency: {\n    decimals: 18,\n    name: "NEAR",\n    symbol: "NEAR",\n  },\n  rpcUrls: {\n    default: { http: [EVMWalletChain.ethRpcForNear] },\n    public: { http: [EVMWalletChain.ethRpcForNear] },\n  },\n  blockExplorers: {\n    default: {\n      name: "NEAR Explorer",\n      url: EVMWalletChain.walletExplorerUrl,\n    },\n  },\n  testnet: !onMainnet,\n};\n')),(0,r.kt)("h3",{id:"get-projectid"},"Get ",(0,r.kt)("inlineCode",{parentName:"h3"},"projectId")),(0,r.kt)("p",null,"Let's get the Web3Modal ",(0,r.kt)("inlineCode",{parentName:"p"},"projectId")," for your project.\nTo do that you will need to:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Go to ",(0,r.kt)("a",{parentName:"li",href:"https://cloud.reown.com/"},"Cloud Reown"),"."),(0,r.kt)("li",{parentName:"ol"},"Register there."),(0,r.kt)("li",{parentName:"ol"},"Create a project on Cloud Reown."),(0,r.kt)("li",{parentName:"ol"},"You can copy your ",(0,r.kt)("inlineCode",{parentName:"li"},"projectId"),":")),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"reown_projectid",src:a(6722).Z,width:"3024",height:"868"})),(0,r.kt)("p",null,"You can read more about the ",(0,r.kt)("inlineCode",{parentName:"p"},"projectId")," and how it works ",(0,r.kt)("a",{parentName:"p",href:"https://docs.reown.com/appkit/react/core/installation#cloud-configuration"},"here"),"."),(0,r.kt)("h3",{id:"prepare-metadata"},"Prepare metadata"),(0,r.kt)("p",null,"Make sure to pass the correct hosting URL here of your project as ",(0,r.kt)("inlineCode",{parentName:"p"},"url")," and create a ",(0,r.kt)("inlineCode",{parentName:"p"},"metadata")," object:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="source/wallets/web3modal.js"',title:'"source/wallets/web3modal.js"'},'...\n\n// get your host URL here\nconst url = "http://localhost:3000";\n\nconst metadata = {\n  name: "Onboard to NEAR Protocol with EVM Wallet",\n  description: "Discover NEAR Protocol with Ethereum and NEAR wallets.",\n  url: url,\n  icons: [`${url}/icon.svg`],\n};\n\n...\n')),(0,r.kt)("p",null,"This tracks the app requesting the connection on the WalletConnect side. See more ",(0,r.kt)("a",{parentName:"p",href:"https://wagmi.sh/core/api/connectors/walletConnect#metadata"},"here"),".\nIt is crucial to display the correct information inside the EVM wallets, like MetaMask."),(0,r.kt)("h3",{id:"create-wagmiconfig"},"Create ",(0,r.kt)("inlineCode",{parentName:"h3"},"wagmiConfig")),(0,r.kt)("p",null,"Now, we can use that ",(0,r.kt)("inlineCode",{parentName:"p"},"projectId")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"metadata")," to instantiate the ",(0,r.kt)("inlineCode",{parentName:"p"},"wagmiConfig"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="source/wallets/web3modal.js"',title:'"source/wallets/web3modal.js"'},"\n...\n\nconst reownProjectId = '5bb0fe33763b3bea40b8d69e4269b4ae';\n\nconst metadata = { ... };\n\nexport const wagmiConfig = createConfig({\n  chains: [nearChain],\n  transports: {\n    [nearChain.id]: http(),\n  },\n  connectors: [\n    walletConnect({ projectId: reownProjectId, metadata, showQrModal: false }),\n    injected({ shimDisconnect: true }),\n  ],\n});\n\n// Needed to be called to preserve the login state if your will reload the page\n// Make sure you are calling it there in your file\nreconnect(wagmiConfig);\n\n")),(0,r.kt)("admonition",{type:"note"},(0,r.kt)("p",{parentName:"admonition"},"Make sure you have ",(0,r.kt)("inlineCode",{parentName:"p"},"reconnect(wagmiConfig);")," in your code.")),(0,r.kt)("h3",{id:"create-web3modal"},"Create Web3Modal"),(0,r.kt)("p",null,"Let's create a Web3Modal now with a config we just prepared with ",(0,r.kt)("inlineCode",{parentName:"p"},"createWeb3Modal")," function:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="source/wallets/web3modal.js"',title:'"source/wallets/web3modal.js"'},'import { createWeb3Modal } from "@web3modal/wagmi";\n\n... \n\nexport const web3Modal = createWeb3Modal({\n  wagmiConfig: wagmiConfig,\n  // Get a project ID at https://cloud.walletconnect.com\n  projectId: reownProjectId,\n});\n')),(0,r.kt)("h2",{id:"call-setupethereumwallets"},"Call ",(0,r.kt)("inlineCode",{parentName:"h2"},"setupEthereumWallets")),(0,r.kt)("p",null,"The last step is to add the Ethereum Wallets selector to your Near Wallet Selector. Let's find your ",(0,r.kt)("inlineCode",{parentName:"p"},"setupWalletSelector")," call and add ",(0,r.kt)("inlineCode",{parentName:"p"},"setupEthereumWallets")," there:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="wallets/near.js"',title:'"wallets/near.js"'},"import { setupWalletSelector } from '@near-wallet-selector/core';\nimport { wagmiConfig, web3Modal } from '@/wallets/web3modal';\nimport { setupEthereumWallets } from \"@near-wallet-selector/ethereum-wallets\";\n...\n// to start using EVM wallet with Near the user needs to do a free onboarding transaction\n// `alwaysOnboardDuringSignIn` option ensures that it will happen right away after login\nconst alwaysOnboardDuringSignIn = true;\n    this.selector = setupWalletSelector({\n      network: this.networkId,\n      modules: [\n        setupMyNearWallet(),\n        setupHereWallet(),\n        // pass your wagmiConfig and web3Modal here as arguments\n        setupEthereumWallets({ wagmiConfig, web3Modal, alwaysOnboardDuringSignIn }),\n      ]\n    });\n\n")),(0,r.kt)("p",null,"And that is it! Just re-build your project and try connecting MetaMask to it!"),(0,r.kt)("p",null,"You should see Ethereum Wallets option in your Near Selector:"),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"ethwallets_popup1",src:a(2803).Z,width:"3008",height:"1658"})),(0,r.kt)("p",null,"And after click to be able to choose the EVM wallet of your taste:"),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"ethwallets_popup2",src:a(3758).Z,width:"3004",height:"1582"})),(0,r.kt)("h2",{id:"resources"},"Resources"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("a",{parentName:"p",href:"https://github.com/near/wallet-selector/blob/9a9f9535ec57633b949872bb51903e7802beb3e8/packages/ethereum-wallets/README.md"},"A fuller version of docs about integration"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("a",{parentName:"p",href:"https://github.com/Karkunow/hello-near-examples/tree/1ceede7"},"Source code of the project above"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("a",{parentName:"p",href:"https://testnet.nearblocks.io/address/0xe5acd26a443d2d62f6b3379c0a5b2c7ac65d9454"},"Example of the EVM account on the Near Testnet")," to see what happens in reality on-chain during the execution.")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Details about how does it work are in ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/near/NEPs/issues/518"},"NEP-518"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("a",{parentName:"p",href:"https://drive.google.com/file/d/1xGWN1yRLzFmRn1e29kbSiO2W1JsxuJH-/view?usp=sharing"},"Recording of the Near Devs call")," with the EthWallets presentation."))))}u.isMDXComponent=!0},2803:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/ethwallets_popup1-b113d70e3578a75f0f996aa3bcdf43e9.png"},3758:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/ethwallets_popup2-8484d037a465af5134f112fba6eef918.png"},6722:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/reown_projectid-dbd1cc5521998d2f16545598ac925a5e.png"}}]);