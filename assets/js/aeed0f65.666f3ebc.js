"use strict";(self.webpackChunkaurora_docs=self.webpackChunkaurora_docs||[]).push([[8487],{1292:(t,n,e)=>{e.r(n),e.d(n,{assets:()=>c,contentTitle:()=>i,default:()=>p,frontMatter:()=>o,metadata:()=>s,toc:()=>d});var r=e(3274),a=e(7507);const o={title:"Write contract"},i=void 0,s={id:"build-a-dapp/frontend/write-contract",title:"Write contract",description:"Writing to the contract is a very similar operation to sending a transaction.",source:"@site/docs/build-a-dapp/frontend/write-contract.md",sourceDirName:"build-a-dapp/frontend",slug:"/build-a-dapp/frontend/write-contract",permalink:"/build-a-dapp/frontend/write-contract",draft:!1,unlisted:!1,editUrl:"https://github.com/aurora-is-near/doc.aurora.dev/edit/master/docs/build-a-dapp/frontend/write-contract.md",tags:[],version:"current",frontMatter:{title:"Write contract"},sidebar:"developers",previous:{title:"Read contract",permalink:"/build-a-dapp/frontend/read-contract"},next:{title:"Introduction",permalink:"/xcc/aurora-to-near/introduction"}},c={},d=[];function l(t){const n={a:"a",admonition:"admonition",code:"code",img:"img",p:"p",pre:"pre",...(0,a.R)(),...t.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(n.p,{children:["Writing to the contract is a very similar operation to ",(0,r.jsx)(n.a,{href:"/build-a-dapp/frontend/transactions",children:"sending a transaction"}),".\nIn fact, it does send the transaction under the hood but provides a more convenient way to encode the ",(0,r.jsx)(n.code,{children:"data"})," argument for it. Let's look at the code right away:"]}),"\n",(0,r.jsx)("iframe",{width:"700",height:"500",src:"https://stackblitz.com/edit/vitejs-vite-muf79v?embed=1&file=src%2FApp.tsx,src%2Fcomponents%2FWriteContract.tsx&view=editor",style:{display:"block",margin:"auto"},title:"Write contract",frameborder:"auto",allow:"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture;\nweb-share",allowfullscreen:!0}),"\n",(0,r.jsx)("br",{}),"\n",(0,r.jsx)(n.p,{children:"In the UI we will have a form to transfer Watermelon tokens to another account:"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{alt:"dapp_write_contract",src:e(3243).A+"",width:"1568",height:"286"})}),"\n",(0,r.jsxs)(n.p,{children:["It will call a ",(0,r.jsx)(n.code,{children:"transfer"})," method on the ERC-20 contract to send the tokens. We will need to specify the contract information: hash and ABI first.\nAnd then, do the job with the ",(0,r.jsx)(n.a,{href:"https://wagmi.sh/react/api/hooks/useWriteContract",children:"useWriteContract"})," hook:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-tsx",metastring:"[components/SendTransaction.tsx]",children:'import { useWriteContract } from \'wagmi\';\n\nexport function ERC20Transfer() {\n  const { data: hash, writeContract, error, isPending } = useWriteContract();\n\n  async function submit(e: FormEvent<HTMLFormElement>) {\n    ...\n    writeContract({\n      ...contractConfig,\n      functionName: \'transfer\',\n      args: [\n        to, //recipient address\n        value, //amount of WTM tokens to transfer\n      ],\n    });\n  }\n\n  return (\n    <div className="container">\n      <div className="stack">\n        <div>Send Watermelons \ud83c\udf49\ud83c\udf49\ud83c\udf49</div>\n        <br />\n        <form className="set" onSubmit={submit}>\n          <input name="address" placeholder="Address" required />\n          <input\n            name="value"\n            placeholder="Amount (Watermelons)"\n            type="number"\n            step="1"\n            required\n          />\n          <button disabled={isPending} type="submit">\n            {isPending ? \'Confirming...\' : \'Send\'}\n          </button>\n        </form>\n      </div>\n    </div>\n  );\n}\n'})}),"\n",(0,r.jsxs)(n.p,{children:["You can also use ",(0,r.jsx)(n.a,{href:"https://wagmi.sh/react/api/hooks/useWaitForTransactionReceipt",children:"useWaitForTransactionReceipt"})," hook to get the receipt and track confirmation\nof the transaction as it was done in ",(0,r.jsx)(n.a,{href:"/build-a-dapp/frontend/transactions",children:"Send Transaction"})," article."]}),"\n",(0,r.jsx)(n.admonition,{type:"note",children:(0,r.jsxs)(n.p,{children:["If you want to practice more, you can also read this ",(0,r.jsx)(n.a,{href:"https://wagmi.sh/react/guides/write-to-contract",children:"Wagmi tutorial"})," with minting NFTs."]})})]})}function p(t={}){const{wrapper:n}={...(0,a.R)(),...t.components};return n?(0,r.jsx)(n,{...t,children:(0,r.jsx)(l,{...t})}):l(t)}},3243:(t,n,e)=>{e.d(n,{A:()=>r});const r=e.p+"assets/images/dapp_write_contract-489e2d273441de1132fba02ac3f974c2.png"},7507:(t,n,e)=>{e.d(n,{R:()=>i,x:()=>s});var r=e(9474);const a={},o=r.createContext(a);function i(t){const n=r.useContext(o);return r.useMemo((function(){return"function"==typeof t?t(n):{...n,...t}}),[n,t])}function s(t){let n;return n=t.disableParentContext?"function"==typeof t.components?t.components(a):t.components||a:i(t.components),r.createElement(o.Provider,{value:n},t.children)}}}]);