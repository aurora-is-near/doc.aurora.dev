"use strict";(self.webpackChunkaurora_docs=self.webpackChunkaurora_docs||[]).push([[4712],{6438:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>h,frontMatter:()=>s,metadata:()=>r,toc:()=>c});const r=JSON.parse('{"id":"dev-tools/basics/truffle","title":"Truffle","description":"\u200bTruffle is a widely used development environment and testing framework for Ethereum smart contracts. In this tutorial, we will show by example how to use Truffle with the Aurora Testnet.","source":"@site/docs/dev-tools/basics/truffle.md","sourceDirName":"dev-tools/basics","slug":"/dev-tools/basics/truffle","permalink":"/dev-tools/basics/truffle","draft":false,"unlisted":false,"editUrl":"https://github.com/aurora-is-near/doc.aurora.dev/edit/master/docs/dev-tools/basics/truffle.md","tags":[],"version":"current","frontMatter":{"title":"Truffle"},"sidebar":"devToolsSidebar","previous":{"title":"Hardhat","permalink":"/dev-tools/basics/hardhat"},"next":{"title":"Chainstack","permalink":"/dev-tools/rpc-providers/chainstack"}}');var a=n(3274),i=n(7507);const s={title:"Truffle"},o=void 0,l={},c=[{value:"NFT Example\u200b",id:"nft-example",level:2},{value:"Installing Prerequisites\u200b",id:"installing-prerequisites",level:2},{value:"Install Truffle\u200b",id:"install-truffle",level:3},{value:"Install dependencies\u200b",id:"install-dependencies",level:3},{value:"Connecting Truffle to Aurora\u200b",id:"connecting-truffle-to-aurora",level:2},{value:"Deploying the Contract\u200b",id:"deploying-the-contract",level:2},{value:"Playing with the Truffle Console\u200b",id:"playing-with-the-truffle-console",level:2},{value:"Mint tokens\u200b",id:"mint-tokens",level:3},{value:"Transfer tokens\u200b",id:"transfer-tokens",level:3},{value:"Burn tokens\u200b",id:"burn-tokens",level:3},{value:"Redistribute tokens\u200b",id:"redistribute-tokens",level:3},{value:"Summary\u200b",id:"summary",level:2}];function d(e){const t={a:"a",code:"code",h2:"h2",h3:"h3",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsxs)(t.p,{children:[(0,a.jsx)(t.a,{href:"https://doc.aurora.dev/interact/truffle#introduction",title:"Direct link to heading",children:"\u200b"}),(0,a.jsx)(t.a,{href:"https://www.trufflesuite.com/",children:"Truffle"})," is a widely used development environment and testing framework for Ethereum smart contracts. In this tutorial, we will show by example how to use Truffle with the Aurora Testnet."]}),"\n",(0,a.jsxs)(t.p,{children:["This tutorial assumes that you are familiar with Truffle and the non-fungible tokens (NFT) concept. For more details about the non-fungible token standard, please refer to the ",(0,a.jsx)(t.a,{href:"https://ethereum.org/en/developers/docs/standards/tokens/erc-721/",children:"ERC-721 Non-Fungible Token Standard"})," specification."]}),"\n",(0,a.jsxs)(t.h2,{id:"nft-example",children:["NFT Example",(0,a.jsx)(t.a,{href:"https://doc.aurora.dev/interact/truffle#nft-example",title:"Direct link to heading",children:"\u200b"})]}),"\n",(0,a.jsxs)(t.p,{children:["This example is originally forked from the ",(0,a.jsx)(t.a,{href:"https://docs.openzeppelin.com/contracts/4.x/erc721",children:"OpenZeppelin examples"}),". However, the code has been changed to fit the use case of this tutorial. The use case is about how to deploy and manage the life cycle of a simple COVID-19 vaccine NFT token \ud83d\udc8a\ud83d\udc8a using Truffle on the Aurora Testnet."]}),"\n",(0,a.jsx)(t.p,{children:(0,a.jsx)(t.img,{src:"https://www.datocms-assets.com/95026/1679442341-truffle_nft_example-a9d17b3f4f30477f3f6d67c4336f20e5.png",alt:""})}),"\n",(0,a.jsxs)(t.ol,{children:["\n",(0,a.jsx)(t.li,{children:"The minter address (which is managed by the vaccination program manager) can distribute (mint) the vaccine tickets (NFT tokens \ud83d\udc8a\ud83d\udc8a\ud83d\udc8a) to the people who are part of the vaccination program."}),"\n",(0,a.jsx)(t.li,{children:"When participants receive the tokens \ud83d\udc8a, they can get access to the vaccine by spending the NFT token."}),"\n",(0,a.jsx)(t.li,{children:"This means either burning the NFT token or sending it back to the minter address."}),"\n",(0,a.jsx)(t.li,{children:"If the participant chooses to send it back then the minter can redistribute that token \ud83c\udfab to another participant in the line."}),"\n",(0,a.jsx)(t.li,{children:"Then the new participant will have access to the same vaccine token that has been used by the previous participant."}),"\n"]}),"\n",(0,a.jsxs)(t.h2,{id:"installing-prerequisites",children:["Installing Prerequisites",(0,a.jsx)(t.a,{href:"https://doc.aurora.dev/interact/truffle#installing-prerequisites",title:"Direct link to heading",children:"\u200b"})]}),"\n",(0,a.jsxs)(t.p,{children:["This tutorial assumes that you have Node.js 12+ and Yarn. Please refer to the ",(0,a.jsx)(t.a,{href:"https://classic.yarnpkg.com/en/docs/install",children:"Yarn installation how-to"})," if you don't yet have the ",(0,a.jsx)(t.code,{children:"yarn"})," command installed locally."]}),"\n",(0,a.jsxs)(t.p,{children:["To install the prerequisite packages, clone the examples repository and then run ",(0,a.jsx)(t.code,{children:"yarn"}),":"]}),"\n",(0,a.jsxs)(t.h3,{id:"install-truffle",children:["Install Truffle",(0,a.jsx)(t.a,{href:"https://doc.aurora.dev/interact/truffle#install-truffle",title:"Direct link to heading",children:"\u200b"})]}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-shell",children:"npm install -g truffle \n"})}),"\n",(0,a.jsxs)(t.h3,{id:"install-dependencies",children:["Install dependencies",(0,a.jsx)(t.a,{href:"https://doc.aurora.dev/interact/truffle#install-dependencies",title:"Direct link to heading",children:"\u200b"})]}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-shell",children:"git clone https://github.com/aurora-is-near/aurora-examples.git\n\ncd aurora-examples/truffle/erc721-example/\n\nyarn \n"})}),"\n",(0,a.jsxs)(t.h2,{id:"connecting-truffle-to-aurora",children:["Connecting Truffle to Aurora",(0,a.jsx)(t.a,{href:"https://doc.aurora.dev/interact/truffle#connecting-truffle-to-aurora",title:"Direct link to heading",children:"\u200b"})]}),"\n",(0,a.jsxs)(t.p,{children:["Export your ",(0,a.jsx)(t.code,{children:"MNEMONIC"})," as follows:"]}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-shell",children:"export MNEMONIC='YOUR MNEMONIC HERE'\n"})}),"\n",(0,a.jsxs)(t.p,{children:["Now in ",(0,a.jsx)(t.code,{children:"truffle-config.js"}),", you will need to change the ",(0,a.jsx)(t.code,{children:"from"})," address as shown below in the ",(0,a.jsx)(t.code,{children:"aurora"})," network section:"]}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-javascript",children:"...\naurora: {\n  provider: () => setupWallet('https://testnet.aurora.dev'),\n  network_id: 0x4e454153,\n  gas: 10000000,\n  from: '0x6A33382de9f73B846878a57500d055B981229ac4' // CHANGE THIS ADDRESS\n},\n"})}),"\n",(0,a.jsxs)(t.p,{children:["The ",(0,a.jsx)(t.code,{children:"truffle-config.js"})," configuration will pick up your ",(0,a.jsx)(t.code,{children:"MNEMONIC"})," environment variable and recover the address that will be used for sending and signing transactions on the Aurora network."]}),"\n",(0,a.jsxs)(t.h2,{id:"deploying-the-contract",children:["Deploying the Contract",(0,a.jsx)(t.a,{href:"https://doc.aurora.dev/interact/truffle#deploying-the-contract",title:"Direct link to heading",children:"\u200b"})]}),"\n",(0,a.jsxs)(t.p,{children:["To deploy the ",(0,a.jsx)(t.code,{children:"CovidVaccineToken"})," contract, you can run the ",(0,a.jsx)(t.code,{children:"yarn"})," command as follows:"]}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-shell",children:"yarn deploy:aurora\n....\n_deploy_contracts.js\n=====================\n\n   Deploying 'CovidVaccineToken'\n   -----------------------------\n   > transaction hash:    0x282012c791d65d0ce2fd1fd9fcc41179dba5bd06c3b02e31e53dbe9cc8af62c1\n   > Blocks: 7            Seconds: 5\n   > contract address:    0x3635D999d8CdA2fAf304b390fb26a9c2f364dFbd\n   > block number:        49151611\n   > block timestamp:     1622034185\n   > account:             0x6A33382de9f73B846878a57500d055B981229ac4\n   > balance:             0\n   > gas used:            2576274 (0x274f92)\n   > gas price:           20 gwei\n   > value sent:          0 ETH\n   > total cost:          0.05152548 ETH\n....\n"})}),"\n",(0,a.jsxs)(t.h2,{id:"playing-with-the-truffle-console",children:["Playing with the Truffle Console",(0,a.jsx)(t.a,{href:"https://doc.aurora.dev/interact/truffle#playing-with-the-truffle-console",title:"Direct link to heading",children:"\u200b"})]}),"\n",(0,a.jsxs)(t.p,{children:["Now you can test the flow as mentioned in the ",(0,a.jsx)(t.a,{href:"https://doc.aurora.dev/interact/truffle#nft-example",children:"NFT Example"})," section:"]}),"\n",(0,a.jsxs)(t.h3,{id:"mint-tokens",children:["Mint tokens",(0,a.jsx)(t.a,{href:"https://doc.aurora.dev/interact/truffle#mint-tokens",title:"Direct link to heading",children:"\u200b"})]}),"\n",(0,a.jsxs)(t.p,{children:["The minter mints and transfers NFT tokens for the vaccine program participant. In this example, the new participant address is ",(0,a.jsx)(t.code,{children:"accounts[1]"})," and the minter address is ",(0,a.jsx)(t.code,{children:"accounts[0]"}),"."]}),"\n",(0,a.jsxs)(t.p,{children:["Please make sure that you are using the same deployer address as a minter address, otherwise the ",(0,a.jsx)(t.code,{children:"mint"})," transaction will revert."]}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-shell",children:"% truffle console --network aurora\ntruffle(aurora)> const cvt = await CovidVaccineToken.deployed()\ntruffle(aurora)> const minter = accounts[0]\ntruffle(aurora)> const participant = accounts[1]\ntruffle(aurora)> await cvt.minter() == minter\ntrue\ntruffle(aurora)> await cvt.mint(participant, {from: minter})\n"})}),"\n",(0,a.jsx)(t.p,{children:"You should notice that none of the participants are allowed to transfer their NFT tokens to anyone except back to the minter."}),"\n",(0,a.jsxs)(t.p,{children:["So let's try to use any participant address to validate this. To do that, change the value of ",(0,a.jsx)(t.code,{children:"from"})," to ",(0,a.jsx)(t.code,{children:"accounts[1]"}),", so that the sender will be the first participant (e.g., the participant address ",(0,a.jsx)(t.code,{children:"0x2531a4D108619a20ACeE88C4354a50e9aC48ecfe"}),")."]}),"\n",(0,a.jsx)(t.p,{children:"In the Truffle console:"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-shell",children:"truffle(aurora)> await cvt.safeTransferFrom(participant, accounts[2], 1, {from: participant})\nUncaught Error: execution reverted:\n...\nreason: 'Invalid Transfer',\n  hijackedStack: 'Error: execution reverted:\\n'\n"})}),"\n",(0,a.jsxs)(t.p,{children:["This is exactly the same error message we have in our NFT contract in ",(0,a.jsx)(t.code,{children:"safeTransferFrom"}),":"]}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-javascript",children:"function safeTransferFrom(\n    address from, \n    address to, \n    uint256 tokenId\n) \n    public \n    virtual \n    override \n    {\n        require(\n            minter == msg.sender || to == minter,\n            'Invalid Transfer'\n        );\n        safeTransferFrom(from, to, tokenId, \"\");\n    }\n"})}),"\n",(0,a.jsxs)(t.h3,{id:"transfer-tokens",children:["Transfer tokens",(0,a.jsx)(t.a,{href:"https://doc.aurora.dev/interact/truffle#transfer-tokens",title:"Direct link to heading",children:"\u200b"})]}),"\n",(0,a.jsxs)(t.p,{children:["Participants can transfer the token to the minter after receiving the vaccine. As shown below, a participant can only send the NFT token if the receiver for this token is the minter (",(0,a.jsx)(t.code,{children:"accounts[0]"}),")."]}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-shell",children:"truffle(aurora)> const tokenID = 1\ntruffle(aurora)> await cvt.ownerOf(tokenID) == participant\ntrue\ntruffle(aurora)> await cvt.safeTransferFrom(participant, minter, tokenID, {from: participant})\ntruffle(aurora)> await cvt.ownerOf(tokenID) == minter\ntrue\n"})}),"\n",(0,a.jsxs)(t.h3,{id:"burn-tokens",children:["Burn tokens",(0,a.jsx)(t.a,{href:"https://doc.aurora.dev/interact/truffle#burn-tokens",title:"Direct link to heading",children:"\u200b"})]}),"\n",(0,a.jsxs)(t.p,{children:["This is an alternative scenario for the NFT token lifecycle. Instead of transferring the token back to the minter, the participant can decide to burn the NFT token by calling the ",(0,a.jsx)(t.code,{children:"burn"})," function:"]}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-shell",children:"truffle(aurora)> await cvt.burn(1, {from: participant}) // 1 is the tokenID\n"})}),"\n",(0,a.jsxs)(t.h3,{id:"redistribute-tokens",children:["Redistribute tokens",(0,a.jsx)(t.a,{href:"https://doc.aurora.dev/interact/truffle#redistribute-tokens",title:"Direct link to heading",children:"\u200b"})]}),"\n",(0,a.jsx)(t.p,{children:"Finally, the minter can send the same token (if not burnt) to a new participant in the line:"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-shell",children:"truffle(aurora)> await cvt.safeTransferFrom(minter, accounts[2], 1, {from: minter})\ntruffle(aurora)> await cvt.ownerOf(1) == accounts[2]\ntrue\n"})}),"\n",(0,a.jsxs)(t.h2,{id:"summary",children:["Summary",(0,a.jsx)(t.a,{href:"https://doc.aurora.dev/interact/truffle#summary",title:"Direct link to heading",children:"\u200b"})]}),"\n",(0,a.jsx)(t.p,{children:"In this simple tutorial, we deployed an NFT contract to the Aurora Testnet using Truffle and interacted with the contract's functions."})]})}function h(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}},7507:(e,t,n)=>{n.d(t,{R:()=>s,x:()=>o});var r=n(9474);const a={},i=r.createContext(a);function s(e){const t=r.useContext(i);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:s(e.components),r.createElement(i.Provider,{value:t},e.children)}}}]);