"use strict";(self.webpackChunkaurora_docs=self.webpackChunkaurora_docs||[]).push([[325],{5245:(t,e,o)=>{o.r(e),o.d(e,{assets:()=>c,contentTitle:()=>i,default:()=>m,frontMatter:()=>r,metadata:()=>s,toc:()=>l});var n=o(3274),a=o(7507);const r={title:"Integration tests for XCC communication",description:"XCC is a powerful tool to merge blockchain ecosystems together. In this post we will talk about how to write integration tests for the XCC contracts communicating between Aurora and Near using Rust",date:"2023-09-08",authors:["olga"],tags:["tutorials"],image:"https://www.datocms-assets.com/95026/1694085970-article-cover.png"},i=void 0,s={permalink:"/blog/communication-from-aurora-to-near-local-testing",editUrl:"https://github.com/aurora-is-near/doc.aurora.dev/edit/master/blog/communication-from-aurora-to-near-local-testing.md",source:"@site/blog/communication-from-aurora-to-near-local-testing.md",title:"Integration tests for XCC communication",description:"XCC is a powerful tool to merge blockchain ecosystems together. In this post we will talk about how to write integration tests for the XCC contracts communicating between Aurora and Near using Rust",date:"2023-09-08T00:00:00.000Z",tags:[{inline:!1,label:"Tutorials",permalink:"/blog/tags/tutorials",description:"Longer posts talking about the subject in detail"}],readingTime:7.196666666666666,hasTruncateMarker:!0,authors:[{name:"Olga Kunyavskaya",title:"Bridge Engineer",imageURL:"https://www.datocms-assets.com/95026/1683043237-t025c6kc9px-u03dl8hkg1w-fe48e17d7ba2-512.png",key:"olga",page:null}],frontMatter:{title:"Integration tests for XCC communication",description:"XCC is a powerful tool to merge blockchain ecosystems together. In this post we will talk about how to write integration tests for the XCC contracts communicating between Aurora and Near using Rust",date:"2023-09-08",authors:["olga"],tags:["tutorials"],image:"https://www.datocms-assets.com/95026/1694085970-article-cover.png"},unlisted:!1,prevItem:{title:"Practical ERC20 Burning",permalink:"/blog/practical-erc20-burning"},nextItem:{title:"Turning Smart Contracts into Indexers",permalink:"/blog/turning-smart-contracts-into-indexers"}},c={authorsImageUrls:[void 0]},l=[];function u(t){const e={a:"a",code:"code",li:"li",ol:"ol",p:"p",...(0,a.R)(),...t.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsxs)(e.p,{children:["In this article, we will learn how to write local tests for the Aurora contracts, which use ",(0,n.jsx)(e.a,{href:"/blog/cross-ecosystem-communication",children:"XCC calls"})," to Near ecosystem. I will use a simple example to demonstrate it, step by step, we will write:"]}),"\n",(0,n.jsxs)(e.ol,{children:["\n",(0,n.jsx)(e.li,{children:"A simple counter contract for Near blockchain."}),"\n",(0,n.jsx)(e.li,{children:"Contract on Aurora, which calls the contract on Near by using the XCC."}),"\n",(0,n.jsxs)(e.li,{children:["One integration test in the ",(0,n.jsx)(e.code,{children:"sandbox"}),"."]}),"\n",(0,n.jsxs)(e.li,{children:["Setup the ",(0,n.jsx)(e.code,{children:"git action"})," for running this test automatically."]}),"\n"]}),"\n",(0,n.jsxs)(e.p,{children:["The example described in this article: ",(0,n.jsx)(e.a,{href:"https://github.com/olga24912/AuroraToNearXCCExample",children:"https://github.com/olga24912/AuroraToNearXCCExample"})]})]})}function m(t={}){const{wrapper:e}={...(0,a.R)(),...t.components};return e?(0,n.jsx)(e,{...t,children:(0,n.jsx)(u,{...t})}):u(t)}},7507:(t,e,o)=>{o.d(e,{R:()=>i,x:()=>s});var n=o(9474);const a={},r=n.createContext(a);function i(t){const e=n.useContext(r);return n.useMemo((function(){return"function"==typeof t?t(e):{...e,...t}}),[e,t])}function s(t){let e;return e=t.disableParentContext?"function"==typeof t.components?t.components(a):t.components||a:i(t.components),n.createElement(r.Provider,{value:e},t.children)}}}]);